<Window 
        xmlns:Controls="clr-namespace:ServiceBusMQManager.Controls" 
        xmlns:c="clr-namespace:System.Collections;assembly=mscorlib"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    
    xmlns:gif="http://wpfanimatedgif.codeplex.com"

    mc:Ignorable="d" 
        x:Class="ServiceBusMQManager.MainWindow"
        x:Name="frmMain"
        Height="315" Width="620" 
        Topmost="True" 
        
        Loaded="Window_Loaded" 
        Closing="Window_Closing" Closed="Window_Closed"
        
        WindowStyle="None" 
        ResizeMode="NoResize"
        MouseDown="Grid_MouseLeftButtonDown" MouseMove="Window_MouseMove" LocationChanged="Window_LocationChanged"
        MinHeight="300"
        MinWidth="600" IsVisibleChanged="Window_IsVisibleChanged" SourceInitialized="Window_SourceInitialized" 
        Activated="frmMain_Activated" 
        >
    <Window.Resources>
        <!--<local:QueueItem x:Key="QueueItemDataSource" d:IsDataSource="True"/>-->
    </Window.Resources>

    <Border BorderBrush="#1581D2"            
            BorderThickness="1,1,1,1"
            CornerRadius="0"
            Background="Transparent">



        <Grid Margin="-1,4,1,-4">
            <Grid.ContextMenu>
                <ContextMenu>
                    <MenuItem Name="miToggleOnTop" Header="Always on Top" Click="miToggleAlwaysOnTop_Click" IsChecked="True" />
                    <Separator />
                    <MenuItem Name="miCheckVersion" Header="Check for New Version..." Click="CheckVersion_Click" />
                    <Separator />
                    <MenuItem Header="Exit" Click="miClose_Click"  />


                </ContextMenu>

            </Grid.ContextMenu>
            <Grid.Resources>
                <Style x:Key="StyleNoFocusRect">
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Control}">
                                <Canvas/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <Style TargetType="{x:Type ListBox}">
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="BorderThickness"  Value="0" />
                    <Setter Property="BorderBrush"  Value="Transparent" />
                    <Setter Property="Padding" Value="8,0,0,0" />
                </Style>

                <!--<DataTemplate DataType="{x:Type local:QueueItem}">

                    <Grid x:Name="panel" HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="10*"/>
                        </Grid.ColumnDefinitions>
                        <Label x:Name="lbName" Content="{Binding Id}" FontSize="12" FontStyle="Normal" Grid.ColumnSpan="1" Grid.Column="1" Margin="0,-4,0,4" FontWeight="Bold" />
                        <Label x:Name="lbQueueName"  Grid.ColumnSpan="1" Grid.Column="1" HorizontalAlignment="Right" Margin="0,0,10,0"  />
                        <Image Height="Auto" Width="Auto" Margin="4,5,10,7"/>
                        <Label x:Name="lbId" Content="lbId" Margin="0,15,8.036,-5" Grid.Column="1" FontSize="9.333" Foreground="#FF7A7A7A" FontStyle="Italic"/>
                    </Grid>

                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding DataContext.Deleted, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                            <Setter Property="Foreground" TargetName="lbName" Value="Gray" />
                            <Setter Property="Foreground" TargetName="lbQueueName" Value="Gray" />
                        </DataTrigger>

                    </DataTemplate.Triggers>
                </DataTemplate>-->

                <Style TargetType="{x:Type ListBoxItem}">

                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">

                                <Grid x:Name="panel" HorizontalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="44"/>
                                        <ColumnDefinition Width="10*"/>
                                    </Grid.ColumnDefinitions>
                                    <Rectangle x:Name="color" Fill="{Binding Queue.ColorString}" Width="4" Margin="0,0,0,1" HorizontalAlignment="Left" />
                                    <Image x:Name="img" Source="{Binding ImagePath}" Height="32" Width="32" Margin="5,4,4,7"/>
                                    <Label x:Name="lbDate"  Grid.ColumnSpan="1" Grid.Column="1" HorizontalAlignment="Right" Margin="0,0,10,0" FontFamily="Calibri" FontSize="13">
                                        <TextBlock>
                                             <Run Text="{Binding ArrivedTimeString}" /><Run Text="{Binding ArrivedTimeMSString}"  Foreground="#FF898989" />
                                        </TextBlock>
                                    </Label>
                                    <TextBlock x:Name="lbQueueName" Text="{Binding Queue.DisplayName}" Grid.ColumnSpan="1" Grid.Column="1" HorizontalAlignment="Right" Margin="0,20,10,0" FontFamily="Segoe UI" FontSize="12"  />
                                    <TextBlock x:Name="lbId" Text="{Binding Id}" Margin="0,20,0,0" HorizontalAlignment="Left" Grid.Column="1" Foreground="#696969" Background="{Binding ElementName=panel, Path=Background}" FontStyle="Italic" FontFamily="Calibri" FontSize="12" />
                                    <TextBlock x:Name="lbName" Text="{Binding DisplayName}" FontSize="15.5" FontStyle="Normal" Grid.ColumnSpan="1" Grid.Column="1"  Margin="0,2,0,4" FontWeight="Medium" FontFamily="Calibri" />
                                    <Rectangle Name="StrikeThrough" HorizontalAlignment="Left" Grid.ColumnSpan="1" Grid.Column="1" Margin="0,0,120,22" 
                                               Height="3" StrokeThickness="1" Stroke="Transparent" Fill="Transparent" />
                                </Grid>

                                <ControlTemplate.Triggers>
                                    <DataTrigger Binding="{Binding Processed}" Value="True">
                                        <Setter Property="Foreground" TargetName="lbName" Value="Gray" />
                                        <Setter Property="Foreground" TargetName="lbQueueName" Value="Gray" />
                                        <Setter Property="Foreground" TargetName="lbDate" Value="Gray" />
                                        <Setter Property="Stroke" TargetName="StrikeThrough" Value="White"/>
                                        <Setter Property="Fill" TargetName="StrikeThrough" Value="#A80C0E"/>
                                        <Setter Property="Width" TargetName="StrikeThrough" Value="{Binding TextWidth}"/>
                                    </DataTrigger>

                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Processed}" Value="True" />
                                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
                                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Selector.IsSelectionActive)}" Value="True" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Stroke" TargetName="StrikeThrough" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                        <Setter Property="Fill" TargetName="StrikeThrough" Value="#F59395"/>

                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Processed}" Value="True" />
                                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
                                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Selector.IsSelectionActive)}" Value="False" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Stroke" TargetName="StrikeThrough" Value="#DEDEDE"/>
                                        <Setter Property="Fill" TargetName="StrikeThrough" Value="#A80C0E"/>
                                    </MultiDataTrigger>

                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter Property="Background" TargetName="panel" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                        <Setter Property="Foreground" TargetName="lbName" Value="White"/>
                                        <Setter Property="Foreground" TargetName="lbId" Value="#DEDEDE"/>
                                        <Setter Property="Foreground" TargetName="lbQueueName" Value="White"/>
                                        <Setter Property="Foreground" TargetName="lbDate" Value="White"/>
                                        <Setter Property="Source" TargetName="img" Value="{Binding SelectedImagePath}"/>
                                        <Setter Property="Fill" TargetName="color" Value="{Binding Queue.SelectedColorString}"/>
                                    </Trigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="true"/>
                                            <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                        </MultiTrigger.Conditions>
                                        <!-- NET 4.5 Feature, Release later in 2013
                                        <Setter Property="Background" TargetName="panel" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                                        -->
                                        <Setter Property="Background" TargetName="panel" Value="#DEDEDE"/>
                                        <Setter Property="Foreground" TargetName="lbName" Value="Black"/>
                                        <Setter Property="Foreground" TargetName="lbId" Value="#4D4D4D"/>
                                        <Setter Property="Foreground" TargetName="lbQueueName" Value="Black"/>
                                        <Setter Property="Foreground" TargetName="lbDate" Value="#4D4D4D"/>
                                        <Setter Property="Source" TargetName="img" Value="{Binding ImagePath}"/>

                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        <Setter Property="Foreground" TargetName="lbName" Value="Black"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>


                <Style TargetType="{x:Type ToggleButton}">
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="BorderBrush"  Value="Transparent" />
                    <Setter Property="Padding" Value="4" />
                    <Setter Property="Background" Value="#EBEBEB" />

                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate xmlns:ms="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" 
                                                TargetType="{x:Type ToggleButton}">

                                <Border Name="btnBorder" HorizontalAlignment="Center" VerticalAlignment="Center" 
                                        BorderBrush="#de6a5b" BorderThickness="0,0,0,0" Background="#EBEBEB" Height="23" Width="{TemplateBinding Width}" >
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Name="btnText" VerticalAlignment="Center" TextAlignment="Center" Width="{TemplateBinding Width}"  Padding="0,0,0,0" Text="{TemplateBinding Content}" />
                                    </StackPanel>
                                </Border>


                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Background" Value="#0E97FF" TargetName="btnBorder" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="#ADADAD"/>
                                    </Trigger>

                                    <!-- Mouse Over -->
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsChecked" Value="False"/>
                                            <Condition Property="IsMouseOver" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <MultiTrigger.Setters>
                                            <Setter Property="Background" Value="#E0E0E0" TargetName="btnBorder" />
                                        </MultiTrigger.Setters>
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsChecked" Value="True"/>
                                            <Condition Property="IsMouseOver" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <MultiTrigger.Setters>
                                            <Setter Property="Background" Value="#45AFFF" TargetName="btnBorder" />
                                        </MultiTrigger.Setters>
                                    </MultiTrigger>


                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Cursor" Value="Hand" />
                                    </Trigger>

                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                    <Style.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="Background" Value="#0E97FF" />
                        </Trigger>

                    </Style.Triggers>
                </Style>

            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="32"/>
                <RowDefinition Height="45"/>
                <RowDefinition Height="30"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <ListBox Margin="2,10,0,10" x:Name="lbItems" 
		                        SelectionChanged="lbItems_SelectionChanged" Grid.Row="3" SelectedIndex="0" MouseDoubleClick="lbItems_MouseDoubleClick" >

                <ListBox.Resources>
                    <!-- override the system brushes so that selected items are transparent
             whether the ListBox has focus or not -->
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"      Color="#001C88" />
                    <!--<SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}"        Color="Transparent" />-->
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}"  Color="Wheat" />
                </ListBox.Resources>

                <ListBox.ContextMenu>
                    <ContextMenu>
                        <MenuItem x:Name="miCopyMsgId" Header="Copy Message ID to Clipboard" Click="miCopyMessageID_Click" IsEnabled="False" />
                        <MenuItem x:Name="miCopyMsgName" Header="Copy Message Name to Clipboard" Click="miCopyMessageName_Click" IsEnabled="False" />
                        <MenuItem x:Name="miCopyMsgContent" Header="Copy Message Content to Clipboard" Click="miCopyMessageContent_Click" IsEnabled="False" />
                        <Separator />
                        <MenuItem x:Name="miResendCommand" Header="Resend Command..." Click="miResendCommand_Click" IsEnabled="False" />
                        <Separator />
                        <MenuItem x:Name="miPurgeMsg" Header="Purge Message" Click="miDeleteMessage_Click" IsEnabled="False" />
                        <MenuItem Header="Purge All Messages" Click="miDeleteAllMessage_Click" />
                        <MenuItem x:Name="miPurgeAllErr" Header="Purge All Error Messages" />
                        <Separator />
                        <MenuItem x:Name="miReturnErrToOrgin" Header="Return Error message to Source Queue" Click="miReturnErrorMsg_Click" IsEnabled="False" />
                        <MenuItem x:Name="miReturnAllErr" Header="Return All Error Messages to Source Queue"  />
                        <Separator />
                        <MenuItem Header="Show Processed Messages" >
                            <MenuItem Header="Past minute" Tag="1" Click="ShowProcessedMsg_Click" />
                            <MenuItem Header="Past 5 minutes" Tag="5" Click="ShowProcessedMsg_Click" />
                            <MenuItem Header="Past 15 minutes" Tag="15" Click="ShowProcessedMsg_Click" />
                            <MenuItem Header="Past 30 minutes" Tag="30" Click="ShowProcessedMsg_Click" />
                            <MenuItem Header="Past 60 minutes" Tag="60" Click="ShowProcessedMsg_Click" />
                            <MenuItem Header="Hours">
                                <MenuItem Header="Past 2 hours" Tag="2*60" Click="ShowProcessedMsg_Click"   />
                                <MenuItem Header="Past 3 hours" Tag="3*60" Click="ShowProcessedMsg_Click"   />
                                <MenuItem Header="Past 8 hours" Tag="8*60" Click="ShowProcessedMsg_Click"   />
                                <MenuItem Header="Past 12 hours" Tag="12*60" Click="ShowProcessedMsg_Click"   />
                            </MenuItem>
                            <MenuItem Header="Days">
                                <MenuItem Header="Past day" Tag="1" Click="ShowProcessedMsgPastDays_Click"   />
                                <MenuItem Header="Past 5 days" Tag="5" Click="ShowProcessedMsgPastDays_Click"   />
                                <MenuItem Header="Past 7 days" Tag="7" Click="ShowProcessedMsgPastDays_Click"   />
                                <MenuItem Header="Past 14 days" Tag="14" Click="ShowProcessedMsgPastDays_Click"   />
                                <MenuItem Header="Past 31 days" Tag="31" Click="ShowProcessedMsgPastDays_Click"   />
                            </MenuItem>
                            <Separator />
                            <MenuItem Header="All messages" Tag="0" Click="ShowProcessedMsg_Click"   />
                        </MenuItem>

                    </ContextMenu>
                </ListBox.ContextMenu>

            </ListBox>

            <Rectangle
                    Height="28"
                    VerticalAlignment="Top"
                    Fill="White" Margin="1,0,-1,0"
             />
            <Image HorizontalAlignment="Left" Height="24" Margin="7,2,0,0" VerticalAlignment="Top" Width="24" RenderTransformOrigin="0.45,-0.194" Source="Images/main24ico.png" Grid.RowSpan="2"/>
            <Label x:Name="lbTitle" Content="Title" Margin="37,2,0,0" 
                   Foreground="#595959" FontFamily="Calibri" FontSize="13" 
                   />
            <Button
                HorizontalAlignment="Right"
                Margin="0,6,32,0"
                VerticalAlignment="Top"
                Width="13"
                Style="{StaticResource ChromeButtonStyle}"
                Click="miToggleAlwaysOnTop_Click"
                ToolTip="Toggle always on top" Height="13"
                >
                <Image x:Name="imgAlwaysOnTop" Source="Images/pinned.png" />
            </Button>
            <Button
                HorizontalAlignment="Right"
                Margin="0,6,10,0"
                Width="18"
                VerticalAlignment="Top"
                Style="{StaticResource ChromeButtonStyle}"
                Click="HandleMinimizeToTrayClick" Height="17">
                <Image Source="Images/minimize.png" />
            </Button>
			<ProgressBar x:Name="prgLoadingQueues" HorizontalAlignment="Right" Margin="0,0,1,7" Width="70" Visibility="Visible" Grid.Row="2" Height="23" VerticalAlignment="Bottom" />
            <ToggleButton x:Name="btnCmd" Content="COMMANDS" HorizontalAlignment="Left" Margin="10,3,0,0" VerticalAlignment="Top" Width="120" Unchecked="btn_Unchecked" Tag="0" Grid.Row="2" Checked="btn_Checked" Height="23" FontFamily="Segoe UI" FontSize="12" />
            <ToggleButton x:Name="btnEvent" Content="EVENTS" HorizontalAlignment="Left" Margin="140,3,0,0" VerticalAlignment="Top" Width="120" Unchecked="btn_Unchecked" Tag="1" Grid.Row="2" Checked="btn_Checked" Height="23" FontFamily="Segoe UI" FontSize="12" />
            <ToggleButton x:Name="btnMsg" Content="MESSAGES" HorizontalAlignment="Left" Margin="270,3,0,0" VerticalAlignment="Top" Width="120" Unchecked="btn_Unchecked" Tag="2" Grid.Row="2" Checked="btn_Checked" Height="23" FontFamily="Segoe UI" FontSize="12" />
            <ToggleButton x:Name="btnError" Content="ERRORS" HorizontalAlignment="Left" Margin="400,3,0,0" VerticalAlignment="Top" Width="120" Unchecked="btn_Unchecked" Tag="3" Grid.Row="2" Checked="btn_Checked" Height="23" FontFamily="Segoe UI" FontSize="12"/>
            <Rectangle Fill="#0E97FF" Margin="10,26,0,2" Grid.Row="2" Height="2" />
            


            <Button x:Name="btnSettings" Grid.Row="1" Click="btnSettings_Click" HorizontalAlignment="Right" Margin="0,0,10,8" ToolTip="Settings..." Width="35" Grid.RowSpan="1" >
                <Button.Template>
                    <ControlTemplate>
                        <Border x:Name="btnBorder" BorderBrush="#de6a5b" BorderThickness="0,0,0,0" Background="#f4f4f6" Margin="0,0,0,0" >
                            <StackPanel Orientation="Horizontal">
                                <Image Source="Images/Settings.png" HorizontalAlignment="Center" />
                            </StackPanel>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#E0E0E0" TargetName="btnBorder" />
                                <Setter Property="Cursor" Value="Hand" />
                            </Trigger>
                            <Trigger Property="ButtonBase.IsPressed" Value="True">
                                <Setter Property="Background" Value="#C4C4C4" TargetName="btnBorder" />
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Button.Template>
            </Button>

            <Button x:Name="btnShowProcessed" Click="btnShowProcessed_Click" HorizontalAlignment="Right" Margin="0,0,200,8" 
                    ToolTip="Show processed messages" Width="40" Grid.Row="1" FontFamily="Segoe UI" FontSize="13" >
                <Button.ContextMenu>
                    <ContextMenu HasDropShadow="False"  Opened="ContextMenu_Opened" Closed="ContextMenu_Closed">
                        <MenuItem Header="Show Processed Messages" Focusable="False"  IsEnabled="False" FontSize="13" FontFamily="Segoe UI"  />
                        <MenuItem Header="Past minute" Tag="1" Click="ShowProcessedMsg_Click" />
                        <MenuItem Header="Past 5 minutes" Tag="5" Click="ShowProcessedMsg_Click" />
                        <MenuItem Header="Past 15 minutes" Tag="15" Click="ShowProcessedMsg_Click" />
                        <MenuItem Header="Past 30 minutes" Tag="30" Click="ShowProcessedMsg_Click" />
                        <MenuItem Header="Past 60 minutes" Tag="60" Click="ShowProcessedMsg_Click" />
                        <MenuItem Header="Hours">
                            <MenuItem Header="Past 2 hours" Tag="120" Click="ShowProcessedMsg_Click"   />
                            <MenuItem Header="Past 3 hours" Tag="180" Click="ShowProcessedMsg_Click"   />
                            <MenuItem Header="Past 8 hours" Tag="480" Click="ShowProcessedMsg_Click"   />
                            <MenuItem Header="Past 12 hours" Tag="720" Click="ShowProcessedMsg_Click"   />
                        </MenuItem>
                        <MenuItem Header="Days">
                            <MenuItem Header="Past day" Tag="1" Click="ShowProcessedMsgPastDays_Click"   />
                            <MenuItem Header="Past 5 days" Tag="5" Click="ShowProcessedMsgPastDays_Click"   />
                            <MenuItem Header="Past 7 days" Tag="7" Click="ShowProcessedMsgPastDays_Click"   />
                            <MenuItem Header="Past 14 days" Tag="14" Click="ShowProcessedMsgPastDays_Click"   />
                            <MenuItem Header="Past 31 days" Tag="31" Click="ShowProcessedMsgPastDays_Click"   />
                        </MenuItem>
                        <Separator />
                        <MenuItem Header="All messages" Tag="0" Click="ShowProcessedMsg_Click" />
                    </ContextMenu>

                </Button.ContextMenu>
                <Button.Template>
                    <ControlTemplate>
                        <Border x:Name="btnBorder" BorderBrush="#35D119" BorderThickness="2,0,0,0" Background="#f4f4f6" Margin="0,0,0,0" >
                            <Image Source="Images/History.png" />
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#E0E0E0" TargetName="btnBorder" />
                                <Setter Property="Cursor" Value="Hand" />
                            </Trigger>
                            <Trigger Property="ButtonBase.IsPressed" Value="True">
                                <Setter Property="Background" Value="#C4C4C4" TargetName="btnBorder" />
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Button.Template>
            </Button>

            <Button x:Name="btnClearProcessed" Click="btnClearProcessed_Click" HorizontalAlignment="Right" Margin="0,0,60,8" ToolTip="Remove list items that has been deleted in their Queue" Width="135" Grid.Row="1" FontFamily="Segoe UI" FontSize="13" >
                <Button.Template>
                    <ControlTemplate>
                        <Border x:Name="btnBorder" BorderBrush="#de6a5b" BorderThickness="2,0,0,0" Background="#f4f4f6" Margin="0,0,-6,0" >
                            <StackPanel Orientation="Horizontal">
                                <Image Source="Images/Delete.png" />
                                <TextBlock x:Name="btnText" VerticalAlignment="Center" Padding="0,0,6,0"><Run Text="Clear Processed"/></TextBlock>
                            </StackPanel>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#E0E0E0" TargetName="btnBorder" />
                                <Setter Property="Cursor" Value="Hand" />
                            </Trigger>
                            <Trigger Property="ButtonBase.IsPressed" Value="True">
                                <Setter Property="Background" Value="#C4C4C4" TargetName="btnBorder" />
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Button.Template>
            </Button>
            <Button x:Name="btnSendCommand" Grid.Row="1" Click="btnSendCommand_Click" HorizontalAlignment="Left" Margin="10,0,0,8" 
                    ToolTip="Send Command to Service Bus" Width="147" Grid.RowSpan="1" FontFamily="Segoe UI" FontSize="13" >
                <Button.Template>
                    <ControlTemplate>
                        <Border x:Name="btnBorder" Margin="0,0,-8,0" BorderBrush="#1B22E0" BorderThickness="2,0,0,0" Background="#f4f4f6" >
                            <StackPanel Orientation="Horizontal">
                                <Image Source="Images/Command-Send.png" Margin="5,5,5,5" />
                                <TextBlock x:Name="btnText" VerticalAlignment="Center" Padding="0,0,6,0"><Run Text="Send Command"/></TextBlock>
                            </StackPanel>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#E0E0E0" TargetName="btnBorder" />
                                <Setter Property="Cursor" Value="Hand" />
                            </Trigger>
                            <Trigger Property="ButtonBase.IsPressed" Value="True">
                                <Setter Property="Background" Value="#C4C4C4" TargetName="btnBorder" />
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Button.Template>
            </Button>

            <Button x:Name="btnViewSubscriptions" Grid.Row="1" HorizontalAlignment="Left" Margin="173,0,0,8" Width="164" Grid.RowSpan="1" 
                   ToolTip="View all Event Subscriptions" Click="btnViewSubscriptions_Click" FontFamily="Segoe UI" FontSize="13" >
                <Button.Template>
                    <ControlTemplate>
                        <Border x:Name="btnBorder" Margin="0,0,-6,0" BorderBrush="#1B22E0" BorderThickness="2,0,0,0" Background="#f4f4f6" >
                            <StackPanel Orientation="Horizontal">
                                <Image Source="Images/viewSubs.png" Margin="5,5,5,5" />
                                <TextBlock x:Name="btnText" VerticalAlignment="Center" Padding="0,0,6,0"><Run Text="View Subscriptions"/></TextBlock>
                            </StackPanel>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#E0E0E0" TargetName="btnBorder" />
                                <Setter Property="Cursor" Value="Hand" />
                            </Trigger>
                            <Trigger Property="ButtonBase.IsPressed" Value="True">
                                <Setter Property="Background" Value="#C4C4C4" TargetName="btnBorder" />
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Button.Template>
            </Button>
            <Label x:Name="lbLoading" Content="Loading..." Visibility="Visible" Margin="10,46,10,0" Grid.Row="3" VerticalAlignment="Top" FontSize="24" FontFamily="Calibri" HorizontalContentAlignment="Center" Background="White"/>
            <!--<TextBox x:Name="tbSearchString" HorizontalAlignment="Right" Height="22" Margin="0,2,0,0" BorderThickness="0,0,0,2" Grid.Row="3" VerticalAlignment="Top" Width="153" BorderBrush="#FF0017FF" FontFamily="Calibri" FontSize="15" Text="Filter string" IsReadOnly="True"/>-->
            <Controls:FilterTextBox x:Name="tbSearchString" HorizontalAlignment="Right" Margin="0,0,0,0" BorderThickness="0,0,0,2" Grid.Row="3" VerticalAlignment="Top" Width="180" FilterChanged="tbSearchString_FilterChanged" FilterCleared="tbSearchString_FilterCleared" Height="28" />
        </Grid>
    </Border>
</Window>
